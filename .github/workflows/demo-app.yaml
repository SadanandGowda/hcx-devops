name: Deploy workflow for HCX Demo application.
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Cluster Environment
        default: dev
        required: true
# on:
#   push:
#     branches:
#     - master
#     - staging
#     - workflow
jobs:
  deployment:
    if: github.actor == 'SadanandGowda' || github.actor ==  'AbhiGaddi' || github.actor == 'shiva-rakshith'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1


      - name: Checkout private
        uses: actions/checkout@v3
        with:
          # repository: Swasth-Digital-Health-Foundation/DevOps
          repository: Swasth-Digital-Health-Foundation/DevOps
          ref: 'workflow'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          submodules: recursive
          path: DevOps




      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: get_branch

      # - name: Print current branch
      #   shell: bash
      #   run: echo ${{ steps.get_branch.outputs.branch }}

      - name: Pull image tag from S3 bucket
        run: |
          aws s3 cp s3://build-tags/tag.txt /tmp/tag.txt
          export IMAGE_TAG="$(cat /tmp/tag.txt)"


      - name: 'Deploy'
        uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
        # uses: vimeda/helm@v1.6.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # cluster-role-arn: arn:aws:iam::131795456882:user/hcx
          aws-region: ap-south-1
          # aws-profile: git-deploy
          cluster-name: ${{ github.event.inputs.environment }}-cluster
          name: 'demo-app'
          namespace: ${{ github.event.inputs.environment }}
          # release: demo-app
          chart-path: 'application/helm/core/demo-app/'
          config-files: 'application/helm/core/demo-app/values.yaml, DevOps/hcx/ansible/inventory/${{ github.event.inputs.environment }}/group_vars/${{ github.event.inputs.environment }}.yaml' 
          values: |
            image.tag=${{ env.IMAGE_TAG }}
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

###

